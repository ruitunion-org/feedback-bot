<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>net9.0</TargetFramework>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
		<DockerComposeProjectPath>..\docker-compose.dcproj</DockerComposeProjectPath>
		<InvariantGlobalization>false</InvariantGlobalization>
		<IsPackable>true</IsPackable>
		<GeneratePackageOnBuild>True</GeneratePackageOnBuild>
		<NeutralLanguage>ru</NeutralLanguage>
		<IncludeSymbols>True</IncludeSymbols>
		<SymbolPackageFormat>snupkg</SymbolPackageFormat>
		<PackageLicenseExpression>GPL-3.0-only</PackageLicenseExpression>
		<PackageRequireLicenseAcceptance>True</PackageRequireLicenseAcceptance>
		<RepositoryUrl>https://github.com/ruitunion-org/feedback-bot</RepositoryUrl>
		<PackageProjectUrl>https://github.com/ruitunion-org/feedback-bot</PackageProjectUrl>
		<Version>0.2.7</Version>
		<Company>RuItUnion</Company>
		<PackageTags>telegram;bot</PackageTags>
		<PackageId>RuItUnion.FeedbackBot</PackageId>
		<PackageReadmeFile>README.md</PackageReadmeFile>
	</PropertyGroup>

	<ItemGroup>
		<None Include="..\README.md">
			<Pack>True</Pack>
			<PackagePath>\</PackagePath>
		</None>
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Aspire.Npgsql" />
		<PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" />
		<PackageReference Include="Npgsql.OpenTelemetry" />
		<PackageReference Include="OpenTelemetry.Exporter.Console" />
		<PackageReference Include="OpenTelemetry.Exporter.OpenTelemetryProtocol" />
		<PackageReference Include="OpenTelemetry.Extensions.Hosting" />
		<PackageReference Include="OpenTelemetry.Instrumentation.AspNetCore" />
		<PackageReference Include="OpenTelemetry.Instrumentation.Http" />
		<PackageReference Include="OpenTelemetry.Instrumentation.Runtime" />
		<PackageReference Include="System.Text.Json" />
		<PackageReference Include="TgBotFrame.Commands" />
		<PackageReference Include="TgBotFrame.Commands.Help" />
		<PackageReference Include="TgBotFrame.Commands.RateLimit" />
		<PackageReference Include="TgBotFrame.Commands.Start" />
	</ItemGroup>

	<PropertyGroup>
		<TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
	</PropertyGroup>

	<Target Name="CopyProjectReferencesToPackage" DependsOnTargets="BuildOnlySettings;ResolveReferences">
		<ItemGroup>
			<!-- Filter out unnecessary files -->
			<_ReferenceCopyLocalPaths
				Include="@(ReferenceCopyLocalPaths->WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')->WithMetadataValue('PrivateAssets', 'All'))" />
		</ItemGroup>

		<!-- Print batches for debug purposes -->
		<Message
			Text="Batch for .nupkg: ReferenceCopyLocalPaths = @(_ReferenceCopyLocalPaths), ReferenceCopyLocalPaths.DestinationSubDirectory = %(_ReferenceCopyLocalPaths.DestinationSubDirectory) Filename = %(_ReferenceCopyLocalPaths.Filename) Extension = %(_ReferenceCopyLocalPaths.Extension)"
			Importance="High" Condition="'@(_ReferenceCopyLocalPaths)' != ''" />

		<ItemGroup>
			<!-- Add file to package with consideration of sub folder. If empty, the root folder is chosen. -->
			<BuildOutputInPackage Include="@(_ReferenceCopyLocalPaths)"
			                      TargetPath="%(_ReferenceCopyLocalPaths.DestinationSubDirectory)" />
		</ItemGroup>
	</Target>

	<ItemGroup>
		<ProjectReference Include="..\RuItUnion.FeedbackBot.Data.Old\RuItUnion.FeedbackBot.Data.Old.csproj">
			<PrivateAssets>All</PrivateAssets>
		</ProjectReference>
		<ProjectReference Include="..\RuItUnion.FeedbackBot.Data\RuItUnion.FeedbackBot.Data.csproj">
			<PrivateAssets>All</PrivateAssets>
		</ProjectReference>
		<ProjectReference Include="..\RuItUnion.FeedbackBot.ServiceDefaults\RuItUnion.FeedbackBot.ServiceDefaults.csproj">
			<PrivateAssets>All</PrivateAssets>
		</ProjectReference>
	</ItemGroup>

	<ItemGroup>
		<Compile Update="Properties\Resources.Designer.cs">
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
			<DependentUpon>Resources.resx</DependentUpon>
		</Compile>
	</ItemGroup>

	<ItemGroup>
		<EmbeddedResource Update="Properties\Resources.resx">
			<Generator>PublicResXFileCodeGenerator</Generator>
			<LastGenOutput>Resources.Designer.cs</LastGenOutput>
		</EmbeddedResource>
	</ItemGroup>

	<Target DependsOnTargets="ResolveReferences" Name="CopyProjectReferencesToPackage">
		<ItemGroup>
			<BuildOutputInPackage
				Include="@(ReferenceCopyLocalPaths->WithMetadataValue('ReferenceSourceTarget', 'ProjectReference'))" />
		</ItemGroup>
	</Target>

</Project>
